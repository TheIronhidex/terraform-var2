---
---
- hosts: all
  become: true
  vars_files:
  - default.yml
  tasks:
  - name: "Update packages"
    apt:
      update_cache: yes
      cache_valid_time: 3600
  - name: "Install apt-transport-https"
    apt:
      name: ['apt-transport-https']
      state: latest
  - name: "Install ca-certificates"
    apt:
      name: ['ca-certificates']
      state: latest
  - name: "Install curl"
    apt:
      name: ['curl']
      state: latest
  - name: "Install gnupg"
    apt:
      name: ['gnupg']
      state: latest
  - name: "Install lsb-release"
    apt:
      name: ['lsb-release']
      state: latest
  - name: "Install software-properties-common"
    apt:
      name: ['software-properties-common']
      state: latest 
      
  - name: "Add Docker’s official GPG key (I)"
    shell: mkdir -p /etc/apt/keyrings
  - name: "Add Docker’s official GPG key (II)"
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - name: "Set up the repository (III)"
    shell: echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    
  - name: "Update packages"
    apt:
      update_cache: yes
      cache_valid_time: 3600     
  - name: "Install docker-ce"
    apt:
      name: ['docker-ce']
      state: latest
  - name: "Install docker-ce-cli"
    apt:
      name: ['docker-ce-cli']
      state: latest
  - name: "Install containerd.io"
    apt:
      name: ['containerd.io']
      state: latest
  - name: "Install docker-compose-plugin"
    apt:
      name: ['docker-compose-plugin']
      state: latest
           
  - name: "Check that docker is active"
      name: docker
      state: started
      enabled: yes
  

  - name: Pull image for launching server
    docker_image:
      image: theironhidex/terraform-var:"{{ build_number }}"
      
  - name: Launch Container Image to Start Web Server
    docker_container:
      name: webserver
      image: theironhidex/terraform-var:"{{ build_number }}"
      state: started
      ports:
      - "80:80"
